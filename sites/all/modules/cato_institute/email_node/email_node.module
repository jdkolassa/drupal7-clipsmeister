<?php
// $Id$
/**
 * @file
 * Email the contents of a node
 */

/**
 * Implements hook_menu().
 */
function email_node_menu() {
  $items['node/%node/email'] = array(
    'title' => 'Email',
    'page callback' => 'email_node_page',
    'page arguments' => array(1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  $items['admin/config/email_node'] = array(
    'title' => 'Email Node Configuration',
    'description' => 'Configure defaults for Email Node.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('email_node_config_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Builds the form to configure defaults
 *
 * @return array
 */
function email_node_config_form() {
  $form = array();
  $before = variable_get('email_node_default_before', array('value' => '',
    'format' => NULL));
  $after = variable_get('email_node_default_after', array('value' => '',
    'format' => NULL));
  $form['email_node_config_description'] = array(
    '#markup' => '<p>Specify defaults to use for the email node tab.</p>',
  );
  $form['email_node_draft_default_to'] = array(
    '#type' => 'emailfield',
    '#title' => t('To'),
    '#description' => t('Draft emails will be sent to this address.'),
    '#required' => FALSE,
    '#placeholder' => 'email@example.com',
    '#default_value' => variable_get('email_node_draft_default_to', ''),
  );
  $form['email_node_final_default_to'] = array(
    '#type' => 'emailfield',
    '#title' => t('To'),
    '#description' => t('Final emails will be sent to this address.'),
    '#required' => FALSE,
    '#placeholder' => 'email@example.com',
    '#default_value' => variable_get('email_node_final_default_to', ''),
  );
  $form['email_node_default_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#description' => t('This will be the subject of the email'),
    '#required' => TRUE,
    '#default_value' => variable_get('email_node_default_subject', '[node:title]'),
  );
  $form['email_node_default_before'] = array(
    '#type' => 'text_format',
    '#title' => t('Text to place above content'),
    '#default_value' => $before['value'],
    '#format' => $before['format'],
    '#rows' => 10,
  );
  $form['email_node_default_after'] = array(
    '#type' => 'text_format',
    '#title' => t('Text to place after content'),
    '#default_value' => $after['value'],
    '#format' => $after['format'],
    '#rows' => 10,
  );
  return system_settings_form($form);
}

/**
 * Callback for email node page
 *
 * @param $node
 *
 * @return array|mixed
 */
function email_node_page($node) {
  return drupal_get_form('email_node_form', $node);
}

/**
 * Builds the form to enter email information
 *
 * @param $form
 * @param $form_state
 * @param $node
 *
 * @return mixed
 */
function email_node_form($form, &$form_state, $node) {
  if (isset($form_state['values']['email_node_key']) && $form_state['values']['email_node_key']) {
    $key = $form_state['values']['email_node_key'];
  }
  else {
    $key = 'draft';
  }
  dpm($key);
  $subject = token_replace(variable_get('email_node_default_subject', '[node:title]'),
    array('node' => $node));
  $before = variable_get('email_node_default_before', array('value' => '',
    'format' => NULL));
  $after = variable_get('email_node_default_after', array('value' => '',
    'format' => NULL));
  $form['email_node_nid'] = array(
    '#type' => 'hidden',
    '#value' => $node->nid,
  );
  $form['email_node_key'] = array(
    '#type' => 'radios',
    '#title' => t('Type of email'),
    '#description' => t('Draft emails will have "DRAFT: " appended before the subject.'),
    '#default_value' => $key,
    '#options' => array(
      'draft' => t('Draft'),
      'final' => t('Final')
    ),
    '#ajax' => array(
      'callback' => 'email_node_type_ajax_callback',
      'wrapper' => 'email-node-to-wrapper',
    ),
  );
  $form['email_node_to'] = array(
    '#type' => 'emailfield',
    '#title' => t('To'),
    '#description' => t('The content will be emailed to this address.'),
    '#required' => TRUE,
    '#value' => variable_get('email_node_' . $key . '_default_to', ''),
    '#prefix' => '<div id="email-node-to-wrapper">',
    '#suffix' => '</div>',
  );
  $form['email_node_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#description' => t('This will be the subject of the email'),
    '#required' => TRUE,
    '#default_value' => $subject,
  );
  $form['email_node_before'] = array(
    '#type' => 'text_format',
    '#title' => t('Text to place above content'),
    '#default_value' => $before['value'],
    '#format' => $before['format'],
    '#rows' => 10,
  );
  $form['email_node_after'] = array(
    '#type' => 'text_format',
    '#title' => t('Text to place after content'),
    '#default_value' => $after['value'],
    '#format' => $after['format'],
    '#rows' => 10,
  );
  return $form;
}

/**
 * Ajax callback for email type selector in tab form
 *
 * @param $form
 * @param $form_state
 *
 * @return mixed
 */
function email_node_type_ajax_callback($form, &$form_state) {
  return $form['email_node_to'];
}

/**
 * Submission handler for tab form
 *
 * @param $form
 * @param $form_state
 */
function email_node_form_submit($form) {
  try {
    if ($node = node_load($form['email_node_nid'])) {
      $before = check_markup($form['email_node_before']['value'],
        $form['email_node_before']['format']);
      $after = check_markup($form['email_node_after']['value'],
        $form['email_node_after']['format']);
      $email_content = array(
        'before' => array(
          '#markup' => $before,
        ),
        'content' => node_view($node),
        'after' => array(
          '#markup' => $after,
        ),
      );
      drupal_mail('email_node', $form['email_node_key'], $form['email_node_to'],
        language_default(), array(
          'subject' => $form['email_node_subject'],
          'body' => $email_content,
        ));
    }
    else {
      throw new Exception('The content could not be loaded.');
    }
    drupal_set_message(t('The email has been sent.'));
  }
  catch (Exception $e) {
    drupal_set_message(t($e->getMessage()), 'error');
  }
}

/**
 * Implements hook_mail().
 */
function email_node_mail($key, &$message, $params) {
  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';
  switch ($key) {
    case 'draft':
      $message['subject'] = 'DRAFT: ' . $params['subject'];
      break;

    case 'final':
      $message['subject'] = $params['subject'];
      break;
  }
  $message['body'] = $params['body'];
}
